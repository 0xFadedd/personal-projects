(()=>{"use strict";var e={496:e=>{e.exports=require("vscode")},81:e=>{e.exports=require("child_process")}},t={};function r(o){var i=t[o];if(void 0!==i)return i.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,r),n.exports}var o={};(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0}),e.activate=void 0;const t=r(496),i=r(81);let n;function s(e){if("file"!==e.uri.scheme)return;t.window.showInformationMessage("Linting file: "+e.fileName);let r=[];try{r=(0,i.execSync)(`python3 ./linter.py ${e.fileName}`).toString().trim().split("\n")}catch(e){return void t.window.showErrorMessage(`Failed to run linter: ${e.message}`)}console.log(r);const o=[];for(const e of r){const r={severity:t.DiagnosticSeverity.Error,range:new t.Range(0,0,0,0),message:e,source:"Directory Structure Checker"};o.push(r)}n.set(e.uri,o)}e.activate=function(e){n=t.languages.createDiagnosticCollection("Directory Structure Checker"),t.window.activeTextEditor&&s(t.window.activeTextEditor.document),e.subscriptions.push(t.workspace.onDidChangeTextDocument((e=>{s(e.document)})))}})(),module.exports=o})();