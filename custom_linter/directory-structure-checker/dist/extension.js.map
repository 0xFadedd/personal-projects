{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,SCAzBF,EAAOC,QAAUC,QAAQ,gB,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,0FCtBA,eACA,QAEA,IAAIQ,EAkBJ,SAASC,EAAKC,GAEZ,GAA4B,SAAxBA,EAASC,IAAIC,OACf,OAGFC,EAAOC,OAAOC,uBAAuB,iBAAmBL,EAASM,UAEjE,IAAIC,EAAmB,GACvB,IACEA,GAAS,IAAAC,UAAS,uBAAuBR,EAASM,YAC/CG,WACAC,OACAC,MAAM,K,CACT,MAAOC,GAEP,YADAT,EAAOC,OAAOS,iBAAiB,yBAAyBD,EAAME,U,CAGhEC,QAAQC,IAAIT,GAGZ,MAAMU,EAAmC,GACzC,IAAK,MAAMC,KAASX,EAAQ,CAC1B,MAAMY,EAAgC,CACpCC,SAAUjB,EAAOkB,mBAAmBC,MACpCC,MAAO,IAAIpB,EAAOqB,MAAM,EAAG,EAAG,EAAG,GACjCV,QAASI,EACTO,OAAQ,+BAEVR,EAAYS,KAAKP,E,CAGnBrB,EAAqB6B,IAAI3B,EAASC,IAAKgB,EACzC,CAjDA,oBAAyBW,GACvB9B,EACEK,EAAO0B,UAAUC,2BAA2B,+BAE1C3B,EAAOC,OAAO2B,kBAChBhC,EAAKI,EAAOC,OAAO2B,iBAAiB/B,UAItC4B,EAAQI,cAAcN,KACpBvB,EAAO8B,UAAUC,yBAAyBC,IACxCpC,EAAKoC,EAAMnC,SAAS,IAG1B,C","sources":["webpack://directory-structure-checker/external commonjs \"vscode\"","webpack://directory-structure-checker/external node-commonjs \"child_process\"","webpack://directory-structure-checker/webpack/bootstrap","webpack://directory-structure-checker/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from \"vscode\";\nimport { execSync } from \"child_process\";\n\nlet diagnosticCollection: vscode.DiagnosticCollection;\n\nexport function activate(context: vscode.ExtensionContext) {\n  diagnosticCollection =\n    vscode.languages.createDiagnosticCollection(\"Directory Structure Checker\");\n\n  if (vscode.window.activeTextEditor) {\n    lint(vscode.window.activeTextEditor.document);\n  }\n\n  // Listen to changes to lint in real-time\n  context.subscriptions.push(\n    vscode.workspace.onDidChangeTextDocument((event) => {\n      lint(event.document);\n    })\n  );\n}\n\nfunction lint(document: vscode.TextDocument) {\n  \n  if (document.uri.scheme !== \"file\") {\n    return;\n  }\n\n  vscode.window.showInformationMessage('Linting file: ' + document.fileName);\n\n  let result: string[] = [];\n  try {\n    result = execSync(`python3 ./linter.py ${document.fileName}`)\n      .toString()\n      .trim()\n      .split(\"\\n\");\n  } catch (error : any) {\n    vscode.window.showErrorMessage(`Failed to run linter: ${error.message}`);\n    return;\n  }\n  console.log(result);\n\n  // Parse the results and create diagnostics\n  const diagnostics: vscode.Diagnostic[] = [];\n  for (const issue of result) {\n    const diagnostic: vscode.Diagnostic = {\n      severity: vscode.DiagnosticSeverity.Error, // Changed to 'Error' to highlight the file name in red\n      range: new vscode.Range(0, 0, 0, 0), // This highlights the first line. Adjust if you know the exact line of the error.\n      message: issue,\n      source: \"Directory Structure Checker\",\n    };\n    diagnostics.push(diagnostic);\n  }\n\n  diagnosticCollection.set(document.uri, diagnostics);\n}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","diagnosticCollection","lint","document","uri","scheme","vscode","window","showInformationMessage","fileName","result","execSync","toString","trim","split","error","showErrorMessage","message","console","log","diagnostics","issue","diagnostic","severity","DiagnosticSeverity","Error","range","Range","source","push","set","context","languages","createDiagnosticCollection","activeTextEditor","subscriptions","workspace","onDidChangeTextDocument","event"],"sourceRoot":""}